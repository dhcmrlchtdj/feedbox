name: ci

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
        paths-ignore:
            - 'frontend/**'

jobs:
    test:
        runs-on: ubuntu-20.04
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: user
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: feedbox
                ports: ['5432:5432']
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - uses: actions/checkout@v2.3.4
            - uses: actions/setup-go@v2.1.3
              with:
                  go-version: '1.x'
            - uses: golangci/golangci-lint-action@v2.5.2
              with:
                  version: v1.42.0
            - run: make test
              env:
                  ENV: 'test'
                  SERVER: 'http://localhost:8000'
                  PORT: '8000'
                  COOKIE_SECRET: '970a02fee5412b41db5c6efc4fe2e0e41bd682778cb1206bcbf295125622507f'
                  GITHUB_CLIENT_ID: 'https://github.com/settings/developers'
                  GITHUB_CLIENT_SECRET: 'https://github.com/settings/developers'
                  MAILGUN_API_KEY: 'key-example'
                  MAILGUN_DOMAIN: 'feedbox.example.com'
                  MAILGUN_FROM: 'feedbox <feedbox@example.com>'
                  TELEGRAM_BOT_TOKEN: '123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11'
                  TELEGRAM_BOT_NAME: 'bot_name'
                  TELEGRAM_WEBHOOK_PATH: '131cd9868e9cf396a807c265a3c97e72'
                  ROLLBAR_TOKEN: 'post_server_item'
                  DATABASE_URL: 'postgres://user:password@localhost:5432/feedbox?sslmode=disable'
    deploy:
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        needs: test
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2.3.4
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v2.1.2
              with:
                  node-version: '16.x'
            - uses: actions/cache@v2.1.2
              with:
                  path: |
                      ~/.npm
                      ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-
            - run: |
                npm i -g pnpm@6
                pnpm install
                pnpm store prune
                make -j build
                echo '!/_build' > .gitignore
                git config user.name "$GITHUB_ACTOR"
                git config user.email "$GITHUB_ACTOR@github.action"
                git add .
                git commit -m 'generated by github action'
              working-directory: ./frontend
            - name: deploy heroku
              run: git push --force https://heroku:$HEROKU_AUTH_TOKEN@git.heroku.com/fbox.git
              env:
                  HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_AUTH_TOKEN }}
