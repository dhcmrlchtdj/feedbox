name: ci

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
        paths-ignore:
            - "frontend/**"

jobs:
    build:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners
        runs-on: ubuntu-22.04
        steps:
            # https://github.com/marketplace/actions/checkout
            - uses: actions/checkout@v3.0.2
            # https://github.com/marketplace/actions/setup-go-environment
            - uses: actions/setup-go@v3.2.1
              with:
                  go-version: "1.19"
            # https://github.com/marketplace/actions/run-golangci-lint
            - uses: golangci/golangci-lint-action@v3.2.0
              with:
                  version: v1.48.0
            - run: make test
              env:
                  DATABASE_URL: "sqlite://feedbox.db"
                  PORT: "8000"
                  ENV: "test"
                  SERVER: "http://localhost:8000"
                  SERVER_SUB_DIR: "/"
                  COOKIE_PASSWORD: "970a02fee5412b41db5c6efc4fe2e0e4"
                  TELEGRAM_WEBHOOK_PATH: "131cd9868e9cf396a807c265a3c97e72"
                  WORKER_TOKEN: "2e963311b1396757f9a1d199768555c3"
                  GITHUB_CLIENT_ID: "https://github.com/settings/developers"
                  GITHUB_CLIENT_SECRET: "https://github.com/settings/developers"
                  MAILGUN_API_KEY: "key-example"
                  MAILGUN_DOMAIN: "feedbox.example.com"
                  MAILGUN_FROM: "feedbox <feedbox@example.com>"
                  TELEGRAM_BOT_TOKEN: "123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
                  TELEGRAM_BOT_NAME: "bot_name"
            # https://github.com/marketplace/actions/setup-node-js-environment
            - uses: actions/setup-node@v3.4.1
              with:
                  node-version: 18
            # https://github.com/marketplace/actions/cache
            - uses: actions/cache@v3.0.7
              with:
                  path: ~/.local/share/pnpm/store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-
            - run: |
                  corepack enable pnpm
                  pnpm install
                  pnpm store prune
              env:
                  PNPM_HOME: /home/runner/.local/bin
              working-directory: ./frontend
            - run: make -j build
              working-directory: ./frontend
            - run: make build
