name: deploy

on:
    push:
        branches:
            - master

jobs:
    heroku:
        runs-on: ubuntu-18.04
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: user
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: feedbox
                ports: ['5432:5432']
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - uses: actions/checkout@v2.0.0
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v1.1.0
              with:
                  version: '14.x'
            - name: yarn-cache
              id: yarn-cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1.1.2
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-
            - run: make ci_test
              env:
                  NODE_ENV: 'development'
                  SERVER: 'http://localhost:8000'
                  COOKIE_SECRET: 'crypto.randomBytes(16).toString("hex")'
                  GITHUB_AUTH_SECRET: 'crypto.randomBytes(16).toString("hex")'
                  GITHUB_CLIENT_ID: 'https://github.com/settings/developers'
                  GITHUB_CLIENT_SECRET: 'https://github.com/settings/developers'
                  MAILGUN_API_KEY: 'key-example'
                  MAILGUN_DOMAIN: 'feedbox.example.com'
                  MAILGUN_FROM: 'feedbox <feedbox@example.com>'
                  TELEGRAM_BOT_TOKEN: '123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11'
                  TELEGRAM_WEBHOOK_PATH: 'crypto'
                  ROLLBAR_TOKEN: 'post_server_item'
                  DATABASE_URL: 'postgres://user:password@localhost:5432/feedbox'
            - uses: codecov/codecov-action@v1.0.6
              with:
                  file: ./pkg/_build/coverage/coverage-final.json
            - name: deploy heroku
              run: git push --force https://heroku:$HEROKU_AUTH_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git || echo
              env:
                  HEROKU_APP_NAME: 'fbox'
                  HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_AUTH_TOKEN }}
            - name: deploy cloudflare worker
              working-directory: ./pkg/cfworker
              run: |
                  yarn add @cloudflare/wrangler
                  yarn wrangler publish
              env:
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
